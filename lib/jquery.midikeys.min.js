/**
 * MIDIKeys 1.1.0
 * (c) 2016 Mike Dominice <mike@mikedominice.com>
 * MIDIKeys is freely distributable under the MIT license.
 */
this.MIDIKeys=function(){"use strict";function a(a,b){var c=String.fromCharCode(a.keyCode),d=B.indexOf(c);if(!(0>d))return b+d}function b(a){return"function"==typeof a}function c(a,b){this.timestamp=a,this.data=b}function d(a,c){var d=c.velocity;return new Uint8Array([c.status,c.note,b(d)?d(a.timeStamp):d])}function e(a,b){return new c(a.timeStamp,d(a,b))}function f(b,c,d,f){return function(g){var h=g.type,i=a(g,d[x]),j={status:b|d[w],note:i,velocity:c};if(i){if(h===q){if(f[i])return;f[i]=!0}else h===r&&delete f[i];d[y].call(this,e(g,j))}}}function g(a){return Array.prototype.slice.call(a,1)}function h(a){return g(arguments).reduce(function(a,b){return b&&Object.keys(b).forEach(function(c){a[c]=b[c]}),a},a)}function i(a,b,c){a.addEventListener(b,c)}function j(a,b,c){a.removeEventListener(b,c)}function k(a,b){var c=this,d={},e=c.opts=h({},z,b),g=f(o,e[u],e,d),k=f(p,e[v],e,d);c[t]=function(a,b){A.indexOf(a)>-1&&(e[a]=b)},c[s]=function(){j(a,q,g),j(a,r,k)},i(a,q,g),i(a,r,k)}var l=48,m=127,n=64,o=144,p=128,q="keydown",r="keyup",s="destroy",t="option",u="noteOnVelocity",v="noteOffVelocity",w="channel",x="startNote",y="onmidimessage",z=function(){var a={};return a[x]=l,a[u]=m,a[v]=n,a[w]=0,a[y]=function(){},a}(),A=[x,u,v,w,y],B="ZSXDCVGBHNJMQ2W3ER5T6Y7UI9O0P";return k}(),function(a,b,c){"use strict";function d(a){return Array.prototype.slice.call(a,1)}function e(a){return"undefined"==typeof a}var f="midiKeys",g="_plugin_"+f,h="destroy";b.fn[f]=function(a){var f=arguments;if(e(a)||"object"==typeof a)return this.each(function(){b.data(this,g)||b.data(this,g,new c(this,a))});if("string"==typeof a){var i;return this.each(function(){var e=b(this).data(g);e instanceof c&&"function"==typeof e[a]&&(i=e[a].apply(e,d(f))),a===h&&b.data(this,g,null)}),e(i)?this:i}}}(this,this.jQuery,this.MIDIKeys);
//# sourceMappingURL=jquery.midikeys.min.js.map